services:
  proxy:
    image: traefik:latest
    ports:
      - 80:80
      - 443:443
    command:
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --entrypoints.web.address=:80
      - --entrypoints.web.http.redirections.entryPoint.to=websecure
      - --entrypoints.web.http.redirections.entryPoint.scheme=https
      - --entrypoints.web.http.redirections.entrypoint.permanent=true
      - --entrypoints.websecure.address=:443
      - --certificatesresolvers.letsencrypt.acme.httpchallenge=true
      - --certificatesresolvers.letsencrypt.acme.httpchallenge.entrypoint=web
      - --certificatesresolvers.letsencrypt.acme.email=pavel@neoplasm.xyz
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
    volumes:
      - ./letsencrypt:/letsencrypt
      - /var/run/docker.sock:/var/run/docker.sock:ro

  web:
    build: .
    command: npm run start
    ports:
      - 3000:3000
    labels:
      - traefik.enable=true
      - traefik.http.routers.router.rule=Host(`neoplasm.xyz`) || Host(`www.neoplasm.xyz`) || Host(`nplsm.xyz`) || Host(`www.nplsm.xyz`)
      - traefik.http.routers.router.entrypoints=websecure
      - traefik.http.routers.router.tls.certresolver=letsencrypt
      - traefik.http.middlewares.redirect.redirectregex.regex=^https?://(www\.|)(neoplasm|nplsm)\.xyz(/*)
      - traefik.http.middlewares.redirect.redirectregex.replacement=https://neoplasm.xyz$${3}
      - traefik.http.middlewares.redirect.redirectregex.permanent=true
      - traefik.http.routers.router.middlewares=redirect